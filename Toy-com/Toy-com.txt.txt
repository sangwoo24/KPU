0000:	fE 80	; BR 100h offset = 100h - 2 = 0FEh

0100:	10 0c	; LDI R4, #10h
0102:	03 09	; LDI R1, #03h
0104:	00 08	; LDI R0, #00h

0106:	01 10	; ST (R1:R0),R0         //ST(R1:R0),R1 가능한지 확인
0108:	00 20	; INC R0  
010a:	80 38	; CMP R4,R0                             
010c:	f8 8f 	; BRNZ //Z=0: pc = 0106h , offset = 0110 - 0106 = (-)8ah
010e:	40 f8	; call target = push pc, pc<- pc + offset(+40h) [서브루틴 이동]


0150:	00 08	; R0 = #00h
0152:	03 0f	; R7 = #03h
0154:	10 0e	; R6 = #10h
0156:	00 10	; Mem(R1:R0)-> R0
0158:	00 13	; Mem(R1:R0)-> R3
015a:	04 23	; SHR R3 (SHL과 바뀌어있음.) 
015c:	62 33	; R3 (Xor) R0 ->R3
015e:	00 20	; INC R0 
0160:	61 16	; R3-> Mem(R7:R6)
0162:	00 26	; INC R6
0164:	80 38	; CMP R4,R0  
0166:	ee 8f	; BRNZ //Z=0: PC= 0156, offset = -12h = -c
0168:	00 48	; RET (POP PC)


0110:	00 0e	; R6 =#00h
0112:	00 12	; Mem(R1:R0)-> R2
0114:	c0 15	; Mem(R7:R6)->R5
0116:	00 20	; INC R0
0118:	00 13	; Mem(R1:R0)-> R3
011a:	4e 32	; R2 (Xor) R3 ->R2
011c:	00 26	; INC R6
011e:	c0 13	; Mem(R7:R6)->R3
0120:	ae 35	; R5 (Xor) R3 ->R5
0122:	98 38	; CMP R4 R6
0124:	f0 8f	; BNRZ // Z=0: PC<-PC+offset(-10h), pc = 0116
0126:	a1 10	; R5->Mem(R1:R0)
0128:	00 20	; INC R0
012a:	41 10	; R2->Mem(R1:R0)
012c:	01 00	; HALT                    // 37(줄)X2 =  총 메모리 74 Bytes 차지
